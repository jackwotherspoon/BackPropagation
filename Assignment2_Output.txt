Assignment 2 Output File 

Student: Jack Wotherspoon 
Student Number: 20012060 

Structure of network is (9,8,6)
As seen 9 input nodes were used, one for each feature given in CSV file.
The number of hidden layers is 1 and it has 8 hidden nodes. 
Only one hidden layer was chosen through trial and error of viewing accuracy on validation set when changing number of layers. Adding a second layer slightly increased accuracy but greatly increased computation and thus was rejected.
The 8 hidden nodes was determined through same trial and error of viewing accuracy on validation set. The 8 nodes gave best results.
There are 6 output nodes, this was chosen due to the number of glass types given which is 6.

Initial Weights:
Input to hidden layer weights:[{'weights': [0.25786589160010154, 0.39821390861041694, 0.9215115920831402, 0.09573378972633739, 0.7408082700206378, 0.8005988127325829, 0.2314757908263756, 0.0864035922750177, 0.2732528982345973, 0.7934282185845376]}, {'weights': [0.0041967454213888145, 0.7393046211957929, 0.6109277435115784, 0.8857384073989099, 0.030868820911199024, 0.4526226223484664, 0.6045959116494748, 0.4818093285525352, 0.6249146116984762, 0.1483923721065018]}, {'weights': [0.3275384493360334, 0.6775246668839547, 0.2539783588980401, 0.7123394866588741, 0.36096717758449204, 0.894922387399065, 0.32006218737378034, 0.9185735156570847, 0.07030425277179475, 0.235143094413793]}, {'weights': [0.22974536336627038, 0.6363727982103935, 0.44260903384385086, 0.6130196133818837, 0.8583825218342039, 0.30231648645924625, 0.004132934575932112, 0.39108929514641977, 0.323790754885682, 0.6983155049490499]}, {'weights': [0.17892833878856762, 0.30855344587392575, 0.3986828791742225, 0.42353706766835686, 0.2536384688811457, 0.9778950610946935, 0.2451508637240456, 0.5756247738191862, 0.08310580389521294, 0.8492963549922229]}, {'weights': [0.8752477965086978, 0.42223472388188776, 0.6493375822655526, 0.44018936340083104, 0.028248726546153846, 0.5009441201128537, 0.40318700248054906, 0.925398544303393, 0.8194836598809924, 0.517713338641718]}, {'weights': [0.6953772075368018, 0.9207085116459824, 0.3090275562029068, 0.661685949287469, 0.19556229833865912, 0.7051107577393261, 0.7648298384997392, 0.21394870558405932, 0.3642737727471759, 0.13854319143759497]}, {'weights': [0.975301523985774, 0.8230076470124886, 0.025757014957281776, 0.71984993830941, 0.558296553035686, 0.9347687839181699, 0.15747928983583248, 0.6166299093042519, 0.2858038105288797, 0.6520951890261254]}]
Hidden to output layer weights:[{'weights': [0.10591107808124745, 0.7085852135793452, 0.24962782895546165, 0.5116980305218455, 0.8509683907822198, 0.12257283952526565, 0.539389001951379, 0.9328105445820618, 0.02217823938420782]}, {'weights': [0.3073429475440205, 0.8509247435306432, 0.3105130141893825, 0.012159680527370154, 0.47270940904322667, 0.8428912281856272, 0.8745934226804758, 0.715772412471554, 0.304190156292918]}, {'weights': [0.641855005192354, 0.1382638814576197, 0.7728016033970352, 0.2810780256478904, 0.8999979362322632, 0.6048965240423316, 0.43212970058329336, 0.7198915225297904, 0.7858247519613272]}, {'weights': [0.009324533481500308, 0.35607915653962763, 0.9484847108263105, 0.6380664979386602, 0.45920508176455754, 0.600795516450517, 0.5878261437919867, 0.48176903315877406, 0.07785796804040379]}, {'weights': [0.2534054713109888, 0.7532447688363078, 0.874148168188735, 0.02437265373779185, 0.9274653151133118, 0.4167351034636797, 0.1577689742597731, 0.7983586652432156, 0.435305654931074]}, {'weights': [0.3365326865319024, 0.7422505764292543, 0.9735951307726832, 0.02724559647160063, 0.6213294072064595, 0.5619594650766501, 0.16638696204139602, 0.6477401747486178, 0.40717760559585836]}]

Node Output Function Used: 
Output node function used for this assignment is sigmoid function as it allows for a smooth and bounded function for the total input. It also has the added benefit of having nice derivatives which make learning the weights of a neural network easier.